ext {
    springIntegrationVersion = '4.1.5.RELEASE'
    springXdVersion = '1.3.2.RELEASE'
}

apply plugin: 'groovy'
apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'spring-xd-module'

sourceCompatibility = 1.8
targetCompatibility = 1.8

compileGroovy {
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
}

[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'
[compileTestGroovy]*.options*.encoding = 'UTF-8'
[compileTestGroovy]*.groovyOptions*.encoding = 'UTF-8'

dependencies {
    compile 'org.springframework.integration:spring-integration-java-dsl:1.1.3.RELEASE'

    compile 'org.projectlombok:lombok:1.16.8'

    testCompile 'org.spockframework:spock-spring:1.0-groovy-2.4'
    testCompile 'cglib:cglib-nodep:3.2.4'
}

// ex : gradle uploadModule -PtargetVersion=1_0_0
task uploadModule(dependsOn: bootRepackage, group: 'build') {
    doLast {
        def targetVersion = 1_0_0
        def jarPath = '@build/libs/' + project.name + '.jar'
        def moduleType = 'job'
        def adminUrl = 'http://www.bookstorage.kr:9393/modules/'
        def requestUrl = adminUrl + moduleType + '/' + project.name + '-' + targetVersion

        def result = ['curl', '--header', 'Content-Type:application/octet-stream'
                      , '--data-binary', jarPath
                      , requestUrl].execute()
        print(result.text)
    }
}

// ex : gradle removeModule -PtargetVersion=1_0_0
task removeModule(group: 'build') {
    doLast {
        def targetVersion = 1_0_0
        def moduleType = 'job'
        def adminUrl = 'http://www.bookstorage.kr:9393/modules/'
        def requestUrl = adminUrl + moduleType + '/' + project.name + '-' + targetVersion

        def result = ['curl', '-X', 'DELETE', requestUrl].execute()
        print(result.text)
    }
}